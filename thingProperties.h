// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[]  = "744e4b94-01d9-471b-922d-248f134625c6";

const char SSID[]               = SECRET_SSID;    // Network SSID (name)
const char PASS[]               = SECRET_OPTIONAL_PASS;    // Network password (use for WPA, or use as key for WEP)
const char DEVICE_KEY[]  = SECRET_DEVICE_KEY;    // Secret device password

void onUserMessageChange();
void onCriticalVoltageChange();
void onSmoothedValueChange();
void onAlertsOnChange();
void onSendPushNotificationChange();

String user_message;
float critical_voltage;
float in_voltage;
float smoothed_value;
bool alerts_on;
bool operational_state;
bool send_push_notification;

void initProperties(){

  ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
  ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
  ArduinoCloud.addProperty(user_message, READWRITE, ON_CHANGE, onUserMessageChange);
  ArduinoCloud.addProperty(critical_voltage, READWRITE, ON_CHANGE, onCriticalVoltageChange);
  ArduinoCloud.addProperty(in_voltage, READ, 1 * SECONDS, NULL);
  ArduinoCloud.addProperty(smoothed_value, READWRITE, 1 * SECONDS, onSmoothedValueChange);
  ArduinoCloud.addProperty(alerts_on, READWRITE, ON_CHANGE, onAlertsOnChange);
  ArduinoCloud.addProperty(operational_state, READ, ON_CHANGE, NULL);
  ArduinoCloud.addProperty(send_push_notification, READWRITE, ON_CHANGE, onSendPushNotificationChange);

}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
